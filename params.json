{"name":"Gotest","tagline":"utils golang sdk to upop srv req (商户接入中国银联UPOP系统)","body":"gotest\r\n======\r\n\r\n### u1) upop utils\r\n\r\nutils golang sdk to upop srv req (商户接入中国银联UPOP系统), SDK rev 0.0.1.\r\n\r\n==== 基本要求 ====\r\n\r\ngolang 1.2+ \r\n\r\n==== 使用说明 ====\r\n```go\r\n/*\r\n\tvar req = upop.NewPayReq().And(upop.UpopPkgParams{ \r\n\t\t\t\"orderTime\":    ot, \r\n\t\t\t\"orderTimeout\": oto, \r\n\t\t\t\"orderNumber\":  orderNumber, \r\n\t\t\t\"orderAmount\":  orderAmount, \r\n\t\t})\r\n*/\r\n\r\nfunc (this *ServiceController) Pay() {\r\n\tbeego.Debug(\"---------2.20 Pay: \")\r\n\tnow := time.Now()\r\n\tresult := PayTnResult{Timestamp: now.Unix(), Code: CODE_FAIL, Msg: MSG_TOKEN_IS_INVALID}\r\n\r\n\t//check token\r\n\ttoken := this.GetReqString(\"token\", \"\")\r\n\tuid, _, _, _, _, _ := this.validationToken(token)\r\n\tif uid > 0 {\r\n\t\torderNumber := this.GetReqString(\"orderNumber\", \"\")\r\n\t\torderAmount := this.GetReqString(\"orderAmount\", \"\")\r\n\t\t//check orderNumber\r\n\t\tif len(orderNumber) <= 0 {\r\n\t\t\tresult.Msg = \"ReqOrderNumberIsnull\"\r\n\t\t\tgoto ret\r\n\t\t}\r\n\t\t//check orderAmount\r\n\t\tif len(orderAmount) <= 0 {\r\n\t\t\tresult.Msg = \"ReqOrderAmountIsnull\"\r\n\t\t\tgoto ret\r\n\t\t}\r\n\r\n\t\td, _ := time.ParseDuration(\"30m\")\r\n\t\tot := now.Format(\"20060102150405\") //format -> 2006-01-02 15:04:05\r\n\t\toto := now.Add(d).Format(\"20060102150405\")\r\n\r\n\t\tvar req = upop.UpopPkgParams{\r\n\t\t\t\"version\":          upop.Version,\r\n\t\t\t\"charset\":          upop.Charset,\r\n\t\t\t\"transType\":        upop.TransType_01, //交易类型\r\n\t\t\t\"merId\":            upop.MerCode,      //商户代码\r\n\t\t\t\"backEndUrl\":       upop.MerBackEndUrl,\r\n\t\t\t\"frontEndUrl\":      \"\",\r\n\t\t\t\"acqCode\":          \"\",\r\n\t\t\t\"orderTime\":        ot,  //交易开始时间\r\n\t\t\t\"orderTimeout\":     oto, //订单超时时间\r\n\t\t\t\"orderNumber\":      orderNumber,\r\n\t\t\t\"orderAmount\":      orderAmount,\r\n\t\t\t\"orderCurrency\":    upop.Currency_CN, //交易币种\r\n\t\t\t\"orderDescription\": \"\",\r\n\t\t\t\"merReserved\":      \"\",\r\n\t\t\t\"reqReserved\":      \"\",\r\n\t\t\t\"sysReserved\":      \"\",\r\n\t\t}\r\n\t\t//beego.Debug(\"req(1):\", req)\r\n\t\treq.Encode(upop.SignType) //signstr\r\n\t\t//beego.Debug(\"req(2):\", req)\r\n\r\n\t\t//req UPMP srv\r\n\t\tvar strurl string\r\n\t\tvar err error\r\n\t\tb := httplib.Post(upop.GateWay)\r\n\t\t//b.SetTLSClientConfig(&tls.Config{InsecureSkipVerify: true})\r\n\t\t//upop.SortFor(req, func(idx int32, k, v string) {\r\n\t\t//\tbeego.Debug(\"k:\", k, \",v:\", v)\r\n\t\t//\tb.Param(k, v)\r\n\t\t//})\r\n\t\tfor k, v := range req {\r\n\t\t\tb.Param(k, v)\r\n\t\t}\r\n\t\tif false {\r\n\t\t\tstrurl, err = b.SetTimeout(100*time.Second, 30*time.Second).String() //strurl\r\n\t\t\tif err != nil {\r\n\t\t\t\tbeego.Debug(\"err:\", err)\r\n\t\t\t\tresult.Msg = \"ReqUpopIsException\"\r\n\t\t\t\tgoto ret\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstrurl = \"charset=UTF-8&merReserved=&reqReserved=&respCode=00&respMsg=ok&sysReserved=&tn=A0000000000001&transType=01&version=1.0.0&signMethod=MD5&signature=e6d1877889422a8b21d9d1a2cd91dfb8\"\r\n\t\t}\r\n\r\n\t\tbeego.Debug(\"strurl:\", strurl)\r\n\r\n\t\tvar rep = upop.UpopPkgParams{}\r\n\t\terr = rep.Decode(strurl)\r\n\t\tcs := rep.CheckSecurity(upop.SecurityKey)\r\n\r\n\t\t//check reps sign\r\n\t\tif cs == false {\r\n\t\t\tresult.Msg = \"UpopRepCheckSecurityError\"\r\n\t\t\tgoto ret\r\n\t\t} else if cs == true && rep.RespCode() == \"00\" && err == nil {\r\n\t\t\t//do the business logic\r\n\t\t\tbeego.Debug(\"tn\", rep.Tn())\r\n\t\t\tresult.Tn = rep.Tn()\r\n\t\t\tresult.Code = CODE_SUCC\r\n\t\t\tresult.Msg = MSG_SUCCESS\r\n\t\t\tgoto ret\r\n\t\t}\r\n\r\n\t\tresult.Msg = \"Error_\" + rep.RespCode() + \"_\" + rep.RespMsg()\r\n\t\tgoto ret\r\n\r\n\t}\r\nret:\r\n\tthis.Data[\"json\"] = &result\r\n\tthis.ServeJson()\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}